# -*- coding: utf-8 -*-
"""day11_model_prediction_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lNCTisa69w4A7BOqs1vWGl9HMloWPKk4

### Import the required libraries -
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import seaborn as sns
import matplotlib.pyplot as plt
# import warnings
import warnings
# filter warnings
warnings.filterwarnings('ignore')
import os
from google.colab import files
from tensorflow.keras.preprocessing.image import load_img, img_to_array
from tensorflow.keras.models import load_model

!pip install h5py

print("Imported libraries!")

"""### Prepare the prediction image -"""

# Import the image to predict
predictionImage = os.path.exists('/content/sample_image.png')
if predictionImage:
  print(f"Prediction image exists: {predictionImage}")
else:
  print(f"Prediction image does not exist! Try importing it:")
  files.upload()

img = load_img('/content/sample_image.png', grayscale=True, target_size=(28, 28))

# Convert the image data to an array
img = img_to_array(img)

# Reshape the image data
img = img.reshape(1, 28, 28, 1)

# Convert the image data into floats
img = img.astype('float32')

# Normalize the image data
img = img / 255.0

"""### Load the pretrained Mnist model from the file -"""

# Make sure the model exists.
pretrainedModel = os.path.exists('/content/MnistTrainedModel.h5')
if pretrainedModel:
  print(f"Pretrained model exists: {pretrainedModel}")
else:
  print(f"Pretrained model does not exist! Try importing it:")
  files.upload()

model = load_model('/content/MnistTrainedModel.h5')

"""### Evaluate the pretrained model -"""

digit = model.predict_classes(img)
print(f"Prediction: {digit[0]}")